{"version":3,"sources":["servicios/index.js","views/ses/index.js"],"names":["BACKEND_URL","SubirArchivo","files","a","formData","FormData","append","axios","post","response","data","error","EnviarEmail","request","_request","subject","message","sendedEmail","SES","useState","setError","done","setDone","state","setState","enviar","e","onChange","target","name","value","xs","md","action","method","encType","className","row","htmlFor","id","placeholder","type","autoComplete","rows","color","onClick","size"],"mappings":"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","file":"static/js/42.fb13a91b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst BACKEND_URL = \"http://ec2-3-135-238-199.us-east-2.compute.amazonaws.com\"\r\n\r\nexport const SubirArchivo = async (files) => {\r\n    debugger\r\n    let formData = new FormData();\r\n    formData.append(\"files\", files[0])\r\n    try {\r\n        const response = await axios.post(`${BACKEND_URL}/api/Amazon/Upload`, formData)\r\n        if (response.data.error) {\r\n            return { data: [], error: true }\r\n        } else {\r\n            return { data: response.data.data, error: false }\r\n        }\r\n    } catch (e) {\r\n        debugger\r\n        return { data: [], error: true }\r\n    }\r\n}\r\nexport const EnviarEmail = async (request) => {\r\n    let _request = {\r\n        subject: request.subject,\r\n        message: request.message,\r\n        sendedEmail: request.sendedEmail\r\n    }\r\n    try {\r\n        const response = await axios.post(`${BACKEND_URL}/api/Amazon/Email`, _request)\r\n        if (response.data.error) {\r\n            return { data: [], error: true }\r\n        } else {\r\n            return { data: response.data.data, error: false }\r\n        }\r\n    } catch (e) {\r\n        return { data: [], error: true }\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormGroup,\r\n    CTextarea,\r\n    CInput,\r\n    CLabel,\r\n    CRow,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { EnviarEmail } from '../../servicios';\r\n\r\nconst SES = () => {\r\n    const [error, setError] = useState(false)\r\n    const [done, setDone] = useState(false)\r\n    const [state, setState] = useState({\r\n        subject: \"\",\r\n        message: \"\",\r\n        sendedEmail: \"\"\r\n    })\r\n\r\n    const enviar = async (e) => {\r\n        let response = await EnviarEmail(state);\r\n        if (response.error) {\r\n            setError(true)\r\n            setDone(false)\r\n        }\r\n        if (!response.error) {\r\n            setError(false)\r\n            setDone(true)\r\n        }\r\n    }\r\n    const onChange = (e) => {\r\n        const { target } = e\r\n\r\n        setState({\r\n            ...state,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <CRow>\r\n            <CCol xs=\"12\" md=\"8\">\r\n                <CCard>\r\n                    <CCardHeader>\r\n                        Envio de correo\r\n              <small> SES</small>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                        <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"text-input\">Asunto</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                    <CInput value={state.subject} onChange={onChange} id=\"text-input\" name=\"subject\" placeholder=\"\" />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"email-input\">Correo</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                    <CInput value={state.sendedEmail} onChange={onChange} type=\"email\" id=\"email-input\" name=\"sendedEmail\" placeholder=\"\" autoComplete=\"email\" />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row>\r\n                                <CCol md=\"3\">\r\n                                    <CLabel htmlFor=\"textarea-input\">Mensaje</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">\r\n                                    <CTextarea\r\n                                        value={state.message}\r\n                                        name=\"message\"\r\n                                        onChange={onChange}\r\n                                        id=\"textarea-input\"\r\n                                        rows=\"9\"\r\n                                    />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            {\r\n                                error &&\r\n                                <CAlert color=\"danger\">\r\n                                    Ha ocurrido un error!!\r\n                                </CAlert>\r\n                            }\r\n                            {\r\n                                done &&\r\n                                <CAlert color=\"success\">\r\n                                    Accion realizada exitosamente!!\r\n                                </CAlert>\r\n                            }\r\n\r\n                        </CForm>\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                        <CButton onClick={enviar} type=\"submit\" size=\"lg\" color=\"primary\">\r\n                            <CIcon name=\"cil-scrubber\" />\r\n                             Enviar\r\n                        </CButton>\r\n                    </CCardFooter>\r\n                </CCard>\r\n            </CCol>\r\n        </CRow>\r\n\r\n    )\r\n}\r\n\r\nexport default SES\r\n"],"sourceRoot":""}